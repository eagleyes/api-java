createOrganization=mutation { createOrganization(organizationDisplayName: "${0}") { organizationId status displayName mainLocation { locationId displayName address {street city province country { code englishName frenchName } postalCode } } } }
enableOrganization=mutation { enableOrganization(organizationId: "${0}") { organizationId status displayName } }
disableOrganization=mutation { disableOrganization(organizationId: "${0}") { organizationId status displayName } }
updateOrganizationDisplayName=mutation { updateOrganization(organizationId: "${0}", organizationDisplayName: "${1}") { organizationId status displayName mainLocation { locationId displayName address {street city province country { code englishName frenchName } postalCode } } } }
updateOrganizationMainLocation=mutation { updateOrganization(organizationId: "${0}", locationId: "${1}") { organizationId status displayName mainLocation { locationId displayName address {street city province country { code englishName frenchName } postalCode } } } }
findOrganization={ findOrganization(organizationId: "${0}") { organizationId status displayName mainLocation { locationId displayName address {street city province country { code englishName frenchName } postalCode } } } }
countOrganizations={ countOrganizations(filter: { displayName: "${0}", status: "${1}" }) }
findOrganizationDetails={ findOrganizations(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content { organizationId status displayName mainLocation { locationId displayName address {street city province country { code englishName frenchName } postalCode } } } } }
findOrganizationSummaries={ findOrganizations(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content { organizationId status displayName } } }

createLocation=mutation { createLocation(organizationId: "${0}", locationName: "${1}", locationReference: "${2}", locationAddress: { street: "${3}", city: "${4}", province: "${5}", countryCode: "${6}", postalCode: "${7}" }) { locationId organizationId status reference displayName address {street city province country { code englishName frenchName } postalCode } } }
enableLocation=mutation { enableLocation(locationId: "${0}") { locationId organizationId status reference displayName } }
disableLocation=mutation { disableLocation(locationId: "${0}") { locationId organizationId status reference displayName } }
updateLocationName=mutation { updateLocation(locationId: "${0}", locationName: "${1}") { locationId organizationId status reference displayName address {street city province country { code englishName frenchName } postalCode } } }
updateLocationAddress=mutation { updateLocation(locationId: "${0}", locationAddress: { street: "${1}", city: "${2}", province: "${3}", countryCode: "${4}", postalCode: "${5}"}) { locationId organizationId status reference displayName address { street city province country { code englishName frenchName } postalCode } } }
findLocation={ findLocation(locationId: "${0}") { locationId organizationId status reference displayName address {street city province country { code englishName frenchName } postalCode } } }
countLocations={ countLocations(filter: { displayName: "${0}", status: "${1}" }) }
findLocationDetails={ findLocations(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content {locationId organizationId status reference displayName address { street city province country { code englishName frenchName } postalCode } } } }
findLocationSummaries={ findLocations(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content {locationId organizationId status reference displayName } } }

createPerson=mutation { createPerson(organizationId: "${0}", name: { firstName: "${1}", middleName: "${2}", lastName: "${3}", salutation: "${4}" }, address: { street: "${5}", city: "${6}", province: "${7}", countryCode: "${8}", postalCode: "${9}" }, communication: { jobTitle: "${10}", language: "${11}", email: "${12}", phoneNumber: "${13}", phoneExtension: "${14}", faxNumber: "${15}" }, position: { sector: "${16}", unit: "${17}", classification: "${18}" }) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
enablePerson=mutation { enablePerson(personId: "${0}") { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } } }
disablePerson=mutation { disablePerson(personId: "${0}") { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } } }
updatePersonName=mutation { updatePerson(personId: "${0}", name: { firstName: "${1}", middleName: "${2}", lastName: "${3}", salutation: "${4}" }) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
updatePersonAddress=mutation { updatePerson(personId: "${0}", address: { street: "${1}", city: "${2}", province: "${3}", countryCode: "${4}", postalCode: "${5}" }) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
updatePersonCommunication=mutation { updatePerson(personId: "${0}", communication: { jobTitle: "${1}", language: "${2}", email: "${3}", phoneNumber: "${4}", phoneExtension: "${5}", faxNumber: "${6}" }) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
updatePersonBusinessUnit=mutation { updatePerson(personId: "${0}", position: { sector: "${1}", unit: "${2}", classification: "${3}" }) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
addUserRole=mutation { addUserRole(personId: "${0}", role: "${1}") { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
removeUserRole=mutation { removeUserRole(personId: "${0}", role: "${1}") { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } } 
setUserRoles=mutation { setUserRoles(personId: "${0}", roles: [ ${1} ]) { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }

findPerson={ findPerson(personId: "${0}") { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } }
countPersons={ countPersons(filter: { displayName: "${0}", status: "${1}" }) }
findPersonDetails={ findPersons(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } address { street city province country { code englishName frenchName } postalCode } communication { jobTitle language { code englishName frenchName } email homePhone { number extension } faxNumber } position { sector { code englishName frenchName } unit { code englishName frenchName } classification { code englishName frenchName } } user { userName roles { code englishName frenchName } } } } }
findPersonSummaries={ findPersons(filter: { displayName: "${0}", status: "${1}" }, paging: { pageNumber: ${2}, pageSize: ${3}, sortField: [${4}], sortOrder: [${5}] }) { number numberOfElements size totalPages totalElements content { personId organizationId status displayName legalName { firstName middleName lastName salutation { code englishName frenchName } } } } }

findAllCodeLookups={ findCodeLookups( category: "${0}" ) { code englishName frenchName } }
findSpecificCodeLookup={ findCodeLookups( category: "${0}", code: "${1}" ) { code englishName frenchName } } 