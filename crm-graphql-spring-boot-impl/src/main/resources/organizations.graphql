schema {
	query: Query
	mutation: Mutation
}

enum SortOrder {
	ASC
	DESC
}

input PagingInput {
	pageNumber: Int!
	pageSize: Int!
	sortField: [String]!
	sortOrder: [SortOrder]!
}

input MailingAddressInput {
	street: String!
	city: String!
	province: String!
	countryCode: String!
	postalCode: String!
}

input OrganizationFilter {
	displayName: String
	status: String
}

input LocationFilter {
	displayName: String
	status: String
}

type Query {	
	findOrganization(organizationId: String!): OrganizationDetails	
	countOrganizations(filter: OrganizationFilter!): Int!
	findOrganizationDetails(filter: OrganizationFilter!, paging: PagingInput!): OrganizationDetailsPage!
	findOrganizationSummaries(filter: OrganizationFilter!, paging: PagingInput!): OrganizationSummaryPage!
	
	findLocation(locationId: String!): LocationDetails
	countLocations(filter: LocationFilter!): Int!
	findLocationDetails(filter: LocationFilter!, paging: PagingInput!): LocationDetailsPage!
	findLocationSummaries(filter: LocationFilter!, paging: PagingInput!): LocationSummaryPage!
}

type Mutation {
	createOrganization(organizationName: String!): OrganizationDetails
	enableOrganization(organizationId: String!): OrganizationSummary
	disableOrganization(organizationId: String!): OrganizationSummary
	updateOrganizationName(organizationId: String!, organizationName: String!): OrganizationDetails
	updateOrganizationMainLocation(organizationId: String!, locationId: String!): OrganizationDetails
	
	createLocation(organizationId: String!, locationName: String!, locationReference: String!, locationAddress: MailingAddressInput!): LocationDetails
	enableLocation(locationId: String!): LocationSummary
	disableLocation(locationId: String!): LocationSummary
	updateLocationName(locationId: String!, locationName: String!): LocationDetails
	updateLocationAddress(locationId: String!, locationAddress: MailingAddressInput!): LocationDetails
}

type OrganizationSummary {
	organizationId: String!
	status: String!
	displayName: String!
}

type OrganizationSummaryPage {
	number: Int!
	numberOfElements: Int!
	size: Int!
	totalPages: Int!
	totalElements: Int!	
	content: [OrganizationSummary]	
}

type OrganizationDetails {
	organizationId: String!
	status: String!
	displayName: String!
	mainLocation: LocationDetails
}

type OrganizationDetailsPage {
	number: Int!
	numberOfElements: Int!
	size: Int!
	totalPages: Int!
	totalElements: Int!	
	content: [OrganizationDetails]	
}

type LocationSummary {
	locationId: String!
	organizationId: String!
	status: String!
	reference: String
	displayName: String
	address: MailingAddress	
}

type LocationSummaryPage {
	number: Int!
	numberOfElements: Int!
	size: Int!
	totalPages: Int!
	totalElements: Int!	
	content: [LocationSummary]	
}

type LocationDetails {
	locationId: String!
	organizationId: String!
	status: String!
	reference: String
	displayName: String
	address: MailingAddress	
}

type LocationDetailsPage {
	number: Int!
	numberOfElements: Int!
	size: Int!
	totalPages: Int!
	totalElements: Int!	
	content: [LocationDetails]	
}

type MailingAddress {
	street: String
	city: String
	province: String
	country: Country
	postalCode: String
}

type Country {
	code: String
	name: String
}